using System;

using Rhino;
using Rhino.Commands;
using Rhino.PlugIns;

namespace RhinoCodePlatform.Rhino3D.Projects.Plugin
{
  public class ProjectPlugin : PlugIn
  {
    static readonly Guid s_projectId = new Guid("99a1eda8-81c6-4967-b683-d7dcd01e92ab");
    static readonly string s_projectData = "ew0KICAiaWQiOiAiOTlhMWVkYTgtODFjNi00OTY3LWI2ODMtZDdkY2QwMWU5MmFiIiwNCiAgImlkZW50aXR5Ijogew0KICAgICJuYW1lIjogIlVBUCIsDQogICAgInZlcnNpb24iOiAiMC4xLjEiLA0KICAgICJwdWJsaXNoZXIiOiB7DQogICAgICAiZW1haWwiOiAiY2xhcmsuY2hlbmdAdWFwY29tcGFueS5jb20iLA0KICAgICAgIm5hbWUiOiAiQ2xhcmsgQ2hlbmciLA0KICAgICAgImNvbXBhbnkiOiAiVUFQIg0KICAgIH0sDQogICAgImNvcHlyaWdodCI6ICJDb3B5cmlnaHQgXHUwMEE5IDIwMjQiLA0KICAgICJpbWFnZSI6IHsNCiAgICAgICJsaWdodCI6IHsNCiAgICAgICAgInR5cGUiOiAic3ZnIiwNCiAgICAgICAgImRhdGEiOiAiUEhOMlp5QjJaWEp6YVc5dVBTSXhMakFpSUhodGJHNXpQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBd0wzTjJaeUlLSUhkcFpIUm9QU0l4TURBd0xqQXdNREF3TUhCMElpQm9aV2xuYUhROUlqYzJPUzR3TURBd01EQndkQ0lnZG1sbGQwSnZlRDBpTUNBd0lERXdNREF1TURBd01EQXdJRGMyT1M0d01EQXdNREFpQ2lCd2NtVnpaWEoyWlVGemNHVmpkRkpoZEdsdlBTSjRUV2xrV1UxcFpDQnRaV1YwSWo0S0NqeG5JSFJ5WVc1elptOXliVDBpZEhKaGJuTnNZWFJsS0RBdU1EQXdNREF3TERjMk9TNHdNREF3TURBcElITmpZV3hsS0RBdU1UQXdNREF3TEMwd0xqRXdNREF3TUNraUNtWnBiR3c5SWlNd01EQXdNREFpSUhOMGNtOXJaVDBpYm05dVpTSVx1MDAyQkNqeHdZWFJvSUdROUlrMHhNREUwSURZMk5qY2dZeTB6SUMwNElDMHpJQzB4TURjNElDMHhJQzB5TXpjNElETWdMVEUzTmpBZ055QXRNak00TkNBeE5pQXRNalEwTkNBek53b3RNalV4SURFeU5TQXRORFF3SURJM05TQXROVGt3SURReU9TQXROREk0SURFeU1Ua2dMVFF6TXlBeE5qVXdJQzB4TUNBeE5UWWdNVFV6SURJek55QXpNVE1nTWpjeElEVXpOUW96TWlBeU1EVWdNellnTlRVNElETXpJREkzTXpVZ2JDMHpJREl4TmpBZ0xUTTVOeUF6SUMwek9UZ2dNaUF3SUMweU1qWTNJR013SUMweE5ESXpJQzAwSUMweU16RXdJQzB4TUFvdE1qTTRNU0F0TVRZZ0xURTRNU0F0TmpBZ0xUSTNNU0F0TVRVM0lDMHpNVGtnTFRVeUlDMHlOU0F0TmpnZ0xUSTRJQzB4TlRnZ0xUSTRJQzA0T1NBd0lDMHhNRFlnTXdvdE1UVXhJREkzSUMwMk5TQXpOQ0F0TVRBM0lEZzBJQzB4TXpZZ01UWXlJR3d0TWpNZ05qRWdMVFVnTWpNM01DQXROU0F5TXpjd0lDMHpPVGdnTXlCakxUTXlPU0F5SUMwek9UZ0tNQ0F0TkRBeklDMHhNWG9pTHo0S1BIQmhkR2dnWkQwaVRUUTBOalVnTmpZMk9DQmpMVE1nTFRFd0lDMDNOVGdnTFRVMU5EZ2dMVGMyT0NBdE5UWXpNeUF0TWlBdE1qQWdOU0F0TWpBZ016Z3dJQzB5TXlCc016Z3hDaTB5SURZZ016Y2dZek1nTWpFZ016TWdNams1SURZMklEWXhPQ0F6TXlBek1Ua2dOak1nTlRrd0lEWTJJRFl3TXlCc05DQXlNaUF6TlRFZ01DQmpNamN4SURBZ016VXhJQzB6Q2pNMU5DQXRNVElnTWlBdE55QXpNeUF0TWpjNElEY3dJQzAyTURNZ016WWdMVE15TkNBMk9DQXROakEzSURjeElDMDJNamNnYkRZZ0xUTTRJRE00TkNBd0lETTROQ0F3SURBS01qUWdZekFnTXpJZ0xUY3lPQ0ExTmpFM0lDMDNNelVnTlRZek5DQXRNeUE1SUMweE1UVWdNVElnTFRVeE1DQXhNaUF0TXprMklEQWdMVFV3TnlBdE15QXROVEV3SUMweE1ub0tiVGMxTlNBdE16WXpNQ0JqTUNBdE5TQXRNVEl5SUMwNElDMHlOekFnTFRnZ2JDMHlOekVnTUNBMklETXpJR016SURFM0lEWXlJRFU0TXlBeE16QWdNVEkxTnlBMk9TQTJOelFLTVRJNUlERXlNellnTVRNeUlERXlOVEFnTkNBeE55QXlOallnTFRJME1UZ2dNamN6SUMweU5UTXllaUl2UGdvOGNHRjBhQ0JrUFNKTk5qYzNOU0EyTmpZNElHTXRNeUF0TnlBdE5DQXRNVEk0TWlBdE15QXRNamd6TXlCc015QXRNamd5TUNBek9UZ2dMVE1nTXprM0lDMHlJREFnTVRFMU1Bb3dJREV4TlRBZ056a2dNQ0JqTVRJd0lEQWdNekkwSURFNUlEUXpNU0EwTUNBek1qTWdOaklnTlRRd0lERTVOeUEyT1RrZ05ETTBJREUwTWlBeU1UQWdNVGt3SURRd01TQXlNVElLT0RVeElERTVJRE0zTVNBeklEZ3pOQ0F0TXpZZ01UQTJOU0F0TmpnZ05EQTBJQzB6TVRFZ056VTBJQzAyTURVZ09EYzBJQzB5TURZZ09EUWdMVFEwTVNBeE1EWWdMVEV4TmpNS01UQTJJQzB6TVRjZ01DQXROREE1SUMweklDMDBNVElnTFRFeWVpQnRNVEV4TmlBdE56WXpJR016TnlBdE55QTROQ0F0TWpJZ01UQTFJQzB6TXlBNU5DQXRORGtnTVRZNUNpMHhOamNnTVRrNElDMHpNVElnTkRjZ0xUSXpOU0EwTnlBdE9URXpJREFnTFRFeE5UQWdMVGdnTFRReElDMHlPQ0F0TVRBeklDMDBNeUF0TVRNMklDMDNOaUF0TVRZekNpMHhPVGtnTFRJeU15QXRORFU0SUMweU1qUWdiQzB4TWpNZ01DQXdJRGswTVNBd0lEazBNU0F4TWpnZ0xUY2dZemN3SUMweklERTFOeUF0TVRNZ01Ua3pJQzB5TUhvaUx6NEtQQzluUGdvOEwzTjJaejRLIg0KICAgICAgfQ0KICAgIH0NCiAgfSwNCiAgInNldHRpbmdzIjogew0KICAgICJidWlsZFBhdGgiOiAiZmlsZTovLy9DOi9Vc2Vycy9jbGFyay5jaGVuZy9PbmVEcml2ZSAtIFVBUCBDb21wYW55L0Rlc2t0b3AvX0NPTU1PTlMvVUFQLVBsdWdpbnMvUkhJTk9fR0gvYnVpbGQvcmg4IiwNCiAgICAiYnVpbGRUYXJnZXQiOiB7DQogICAgICAiYXBwTmFtZSI6ICJSaGlubzNEIiwNCiAgICAgICJhcHBWZXJzaW9uIjogew0KICAgICAgICAibWFqb3IiOiA4DQogICAgICB9LA0KICAgICAgInRpdGxlIjogIlJoaW5vM0QgKDguKikiLA0KICAgICAgInNsdWciOiAicmg4Ig0KICAgIH0sDQogICAgInB1Ymxpc2hUYXJnZXQiOiB7DQogICAgICAidGl0bGUiOiAiTWNOZWVsIFlhayBTZXJ2ZXIiDQogICAgfQ0KICB9LA0KICAiY29kZXMiOiBbDQogICAgew0KICAgICAgImlkIjogIjljZDM1ZjNkLTkzNDgtNDFmNC04YjA4LTg4OTQwNGZhMGY1MSIsDQogICAgICAibGFuZ3VhZ2UiOiB7DQogICAgICAgICJpZCI6ICIqLioucHl0aG9uIiwNCiAgICAgICAgInZlcnNpb24iOiAiKi4qLioiDQogICAgICB9LA0KICAgICAgInRpdGxlIjogIlJhbmRvbUNvbG9ycyIsDQogICAgICAiaW1hZ2UiOiB7DQogICAgICAgICJsaWdodCI6IHsNCiAgICAgICAgICAidHlwZSI6ICJzdmciLA0KICAgICAgICAgICJkYXRhIjogIlBITjJaeUI0Yld4dWN6MGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY2lJSFpwWlhkQ2IzZzlJakFnTUNBeE15NDRPQ0F4TXk0Mk9DSVx1MDAyQkNpQWdQR1JsWm5NXHUwMDJCQ2lBZ0lDQThjM1I1YkdVXHUwMDJCQ2lBZ0lDQWdJQzVqYkhNdE1TQjdDaUFnSUNBZ0lDQWdiM0JoWTJsMGVUb2dMall4T3dvZ0lDQWdJQ0I5Q2dvZ0lDQWdJQ0F1WTJ4ekxUSWdld29nSUNBZ0lDQWdJRzl3WVdOcGRIazZJQzQxTnpzS0lDQWdJQ0FnZlFvS0lDQWdJQ0FnTG1Oc2N5MHpJSHNLSUNBZ0lDQWdJQ0JtYVd4c09pQnlaV1E3Q2lBZ0lDQWdJSDBLQ2lBZ0lDQWdJQzVqYkhNdE5DQjdDaUFnSUNBZ0lDQWdjM1J5YjJ0bExYZHBaSFJvT2lBd2NIZzdDaUFnSUNBZ0lIMEtDaUFnSUNBZ0lDNWpiSE10TkN3Z0xtTnNjeTAxTENBdVkyeHpMVFlzSUM1amJITXROeUI3Q2lBZ0lDQWdJQ0FnWm1sc2JEb2dibTl1WlRzS0lDQWdJQ0FnSUNCemRISnZhMlU2SUNNd01EQTdDaUFnSUNBZ0lDQWdjM1J5YjJ0bExXeHBibVZqWVhBNklISnZkVzVrT3dvZ0lDQWdJQ0FnSUhOMGNtOXJaUzFzYVc1bGFtOXBiam9nY205MWJtUTdDaUFnSUNBZ0lIMEtDaUFnSUNBZ0lDNWpiSE10TkN3Z0xtTnNjeTAzSUhzS0lDQWdJQ0FnSUNCemRISnZhMlV0WkdGemFHRnljbUY1T2lBdU1TQXVNVHNLSUNBZ0lDQWdmUW9LSUNBZ0lDQWdMbU5zY3kwMUlIc0tJQ0FnSUNBZ0lDQnpkSEp2YTJVdGQybGtkR2c2SUM0eU5YQjRPd29nSUNBZ0lDQjlDZ29nSUNBZ0lDQXVZMnh6TFRZZ2V3b2dJQ0FnSUNBZ0lITjBjbTlyWlMxM2FXUjBhRG9nTGpBMWNIZzdDaUFnSUNBZ0lIMEtDaUFnSUNBZ0lDNWpiSE10TnlCN0NpQWdJQ0FnSUNBZ2MzUnliMnRsTFhkcFpIUm9PaUF1TUROd2VEc0tJQ0FnSUNBZ2ZRb0tJQ0FnSUNBZ0xtTnNjeTA0SUhzS0lDQWdJQ0FnSUNCbWFXeHNPaUFqTURBeE0yWm1Pd29nSUNBZ0lDQjlDZ29nSUNBZ0lDQXVZMnh6TFRrZ2V3b2dJQ0FnSUNBZ0lHWnBiR3c2SUNNd01HWm1NVEk3Q2lBZ0lDQWdJSDBLSUNBZ0lEd3ZjM1I1YkdVXHUwMDJCQ2lBZ1BDOWtaV1p6UGdvZ0lEeG5JR2xrUFNKTllXdGxNa1E2T2xacGMybGliR1U2T2tOMWNuWmxjeUlnWTJ4aGMzTTlJbU5zY3kweElqNEtJQ0FnSUR4blBnb2dJQ0FnSUNBOFp6NEtJQ0FnSUNBZ0lDQThjR0YwYUNCamJHRnpjejBpWTJ4ekxUa2lJR1E5SWsweE15NHpOaXd6TGpZell5NHhPQzR6TkM0eU55NDNNeTR5Tnl3eExqRXhjeTB1TURrdU56WXRMakkzTERFdU1URmpMUzR3Tmk0eE1pMHVNVFF1TWpVdExqSXpMak0zTFM0eUxqSTNMUzQwTkM0ME9DMHVOek11TmpVdExqTTNMakl5TFM0NExqTXpMVEV1TWpJdU16TnpMUzQ0TlMwdU1URXRNUzR5TWkwdU16TmpMUzR5T1MwdU1UWXRMalUwTFM0ek9DMHVOelF0TGpZMUxTNHdPUzB1TVRJdExqRTJMUzR5TkMwdU1qTXRMak0zTFM0eE55MHVNelF0TGpJMkxTNDNNeTB1TWpZdE1TNHhNWE11TURrdExqYzJMakkyTFRFdU1URmpMakEzTFM0eE1pNHhOQzB1TWpVdU1qTXRMak0zTGpJdExqSTNMalExTFM0ME9DNDNOQzB1TmpVdU16Y3RMakl5TGpndExqTXpMREV1TWpJdExqTXpjeTQ0TlM0eE1Td3hMakl5TGpNell5NHlPUzR4Tmk0MU5DNHpPQzQzTXk0Mk5TNHdPUzR4TWk0eE5pNHlOQzR5TXk0ek4xb2lMejRLSUNBZ0lDQWdJQ0E4Y0c5c2VXZHZiaUJqYkdGemN6MGlZMnh6TFRnaUlIQnZhVzUwY3owaU5pNDVOQ0F4TUM0ME9TQTVMalE0SURrdU1ETWdPUzQwT0NBeE1TNDVOeUEyTGprMElERXpMalEwSURZdU9UUWdNVEF1TkRraUx6NEtJQ0FnSUNBZ0lDQThjRzlzZVdkdmJpQmpiR0Z6Y3owaVkyeHpMVGdpSUhCdmFXNTBjejBpT1M0ME9DQTVMakF6SURZdU9UUWdNVEF1TkRrZ05DNHpPU0E1TGpBeklEWXVPVFFnTnk0MU5TQTVMalE0SURrdU1ETWlMejRLSUNBZ0lDQWdJQ0E4Y0c5c2VXZHZiaUJqYkdGemN6MGlZMnh6TFRnaUlIQnZhVzUwY3owaU5pNDVOQ0F4TUM0ME9TQTJMamswSURFekxqUTBJRFF1TXprZ01URXVPVGNnTkM0ek9TQTVMakF6SURZdU9UUWdNVEF1TkRraUx6NEtJQ0FnSUNBZ0lDQThjR0YwYUNCamJHRnpjejBpWTJ4ekxUTWlJR1E5SWswMExqWTBMRFV1TmpGakxqSXhMalV6TFM0eE9DNDVOaTB1TlRrc01TNHlMUzQyTmk0ek9DMHhMalU0TGpRMExUSXVNekV1TXkwdU16Y3RMakE0TFM0M055MHVNak10TVM0d09DMHVORGN0TGpNeExTNHlOUzB1TlRJdExqWXlMUzR6TmkweExqQTBRekV1TURNc015NDRNaXd4TGpjMUxESXVNRFFzTWk0ME9DNHlOV011TnpNc01TNDNPU3d4TGpRMExETXVOVGNzTWk0eE55dzFMak0yV2lJdlBnb2dJQ0FnSUNBOEwyY1x1MDAyQkNpQWdJQ0FnSUR4blBnb2dJQ0FnSUNBZ0lEeHdZWFJvSUdOc1lYTnpQU0pqYkhNdE5pSWdaRDBpVFRFeUxqUXNOaTQ0Tm1NdExqTTNMakl5TFM0NExqTXpMVEV1TWpJdU16TnpMUzQ0TlMwdU1URXRNUzR5TWkwdU16TmpMUzR5T1MwdU1UWXRMalUwTFM0ek9DMHVOelF0TGpZMUxTNHdPUzB1TVRJdExqRTJMUzR5TkMwdU1qTXRMak0zTFM0eE55MHVNelF0TGpJMkxTNDNNeTB1TWpZdE1TNHhNWE11TURrdExqYzJMakkyTFRFdU1URmpMakEzTFM0eE1pNHhOQzB1TWpVdU1qTXRMak0zTGpJdExqSTNMalExTFM0ME9DNDNOQzB1TmpVdU16Y3RMakl5TGpndExqTXpMREV1TWpJdExqTXpjeTQ0TlM0eE1Td3hMakl5TGpNell5NHlPUzR4Tmk0MU5DNHpPQzQzTXk0Mk5TNHdPUzR4TWk0eE5pNHlOQzR5TXk0ek55NHhPQzR6TkM0eU55NDNNeTR5Tnl3eExqRXhjeTB1TURrdU56WXRMakkzTERFdU1URmpMUzR3Tmk0eE1pMHVNVFF1TWpVdExqSXpMak0zTFM0eUxqSTNMUzQwTkM0ME9DMHVOek11TmpWYUlpOFx1MDAyQkNpQWdJQ0FnSUNBZ1BHeHBibVVnWTJ4aGMzTTlJbU5zY3kwMklpQjRNVDBpTmk0NU5DSWdlVEU5SWpFd0xqUTVJaUI0TWowaU9TNDBPQ0lnZVRJOUlqa3VNRE1pTHo0S0lDQWdJQ0FnSUNBOGJHbHVaU0JqYkdGemN6MGlZMnh6TFRZaUlIZ3hQU0kwTGpNNUlpQjVNVDBpTVRFdU9UY2lJSGd5UFNJMkxqazBJaUI1TWowaU1UTXVORFFpTHo0S0lDQWdJQ0FnSUNBOGJHbHVaU0JqYkdGemN6MGlZMnh6TFRZaUlIZ3hQU0kyTGprMElpQjVNVDBpTnk0MU5TSWdlREk5SWpRdU16a2lJSGt5UFNJNUxqQXpJaThcdTAwMkJDaUFnSUNBZ0lDQWdQSEJoZEdnZ1kyeGhjM005SW1Oc2N5MDJJaUJrUFNKTkxqTXhMRFV1TmpGakxTNHhOaTQwTVM0d05TNDNPUzR6Tml3eExqQTBMak11TWpRdU56RXVNemtzTVM0d09DNDBOeTQzTXk0eE5Dd3hMalkxTGpBNExESXVNekV0TGpNaUx6NEtJQ0FnSUNBZ0lDQThiR2x1WlNCamJHRnpjejBpWTJ4ekxUWWlJSGd4UFNJNUxqUTRJaUI1TVQwaU1URXVPVGNpSUhneVBTSTVMalE0SWlCNU1qMGlPUzR3TXlJdlBnb2dJQ0FnSUNBZ0lEeHdZWFJvSUdOc1lYTnpQU0pqYkhNdE5pSWdaRDBpVFRJdU5EZ3VNalZqTGpjekxERXVOemtzTVM0ME5Dd3pMalUzTERJdU1UY3NOUzR6TmlJdlBnb2dJQ0FnSUNBZ0lEeHNhVzVsSUdOc1lYTnpQU0pqYkhNdE5pSWdlREU5SWpZdU9UUWlJSGt4UFNJeE15NDBOQ0lnZURJOUlqa3VORGdpSUhreVBTSXhNUzQ1TnlJdlBnb2dJQ0FnSUNBZ0lEeHdZWFJvSUdOc1lYTnpQU0pqYkhNdE5pSWdaRDBpVFM0ek1TdzFMall4UXpFdU1ETXNNeTQ0TWl3eExqYzFMREl1TURRc01pNDBPQzR5TlNJdlBnb2dJQ0FnSUNBZ0lEeHNhVzVsSUdOc1lYTnpQU0pqYkhNdE5pSWdlREU5SWpRdU16a2lJSGt4UFNJeE1TNDVOeUlnZURJOUlqUXVNemtpSUhreVBTSTVMakF6SWk4XHUwMDJCQ2lBZ0lDQWdJQ0FnUEd4cGJtVWdZMnhoYzNNOUltTnNjeTAySWlCNE1UMGlOQzR6T1NJZ2VURTlJamt1TURNaUlIZ3lQU0kyTGprMElpQjVNajBpTVRBdU5Ea2lMejRLSUNBZ0lDQWdJQ0E4YkdsdVpTQmpiR0Z6Y3owaVkyeHpMVFlpSUhneFBTSTJMamswSWlCNU1UMGlNVE11TkRRaUlIZ3lQU0kyTGprMElpQjVNajBpTVRBdU5Ea2lMejRLSUNBZ0lDQWdJQ0E4Y0dGMGFDQmpiR0Z6Y3owaVkyeHpMVFlpSUdROUlrMDBMakExTERZdU9ERmpMalF4TFM0eU5DNDRMUzQyTnk0MU9TMHhMaklpTHo0S0lDQWdJQ0FnSUNBOGJHbHVaU0JqYkdGemN6MGlZMnh6TFRZaUlIZ3hQU0k1TGpRNElpQjVNVDBpT1M0d015SWdlREk5SWpZdU9UUWlJSGt5UFNJM0xqVTFJaThcdTAwMkJDaUFnSUNBZ0lEd3ZaejRLSUNBZ0lEd3ZaejRLSUNBOEwyY1x1MDAyQkNpQWdQR2NnYVdROUlrMWhhMlV5UkRvNlNHbGtaR1Z1T2pwRGRYSjJaWE1pSUdOc1lYTnpQU0pqYkhNdE1pSVx1MDAyQkNpQWdJQ0E4YkdsdVpTQmpiR0Z6Y3owaVkyeHpMVFFpSUhneFBTSXlMalE0SWlCNU1UMGlMakkxSWlCNE1qMGlOQzR3TlNJZ2VUSTlJalF1T1RraUx6NEtJQ0FnSUR4c2FXNWxJR05zWVhOelBTSmpiSE10TkNJZ2VERTlJakl1TkRnaUlIa3hQU0l1TWpVaUlIZ3lQU0l1T1NJZ2VUSTlJalF1T1RraUx6NEtJQ0FnSUR4c2FXNWxJR05zWVhOelBTSmpiSE10TkNJZ2VERTlJall1T1RRaUlIa3hQU0l4TUM0MUlpQjRNajBpTmk0NU5DSWdlVEk5SWpjdU5UWWlMejRLSUNBZ0lEeHNhVzVsSUdOc1lYTnpQU0pqYkhNdE5DSWdlREU5SWprdU5EZ2lJSGt4UFNJeE1TNDVOeUlnZURJOUlqWXVPVFFpSUhreVBTSXhNQzQxSWk4XHUwMDJCQ2lBZ0lDQThiR2x1WlNCamJHRnpjejBpWTJ4ekxUUWlJSGd4UFNJMkxqazBJaUI1TVQwaU1UQXVOU0lnZURJOUlqUXVNemtpSUhreVBTSXhNUzQ1TnlJdlBnb2dJQ0FnUEhCaGRHZ2dZMnhoYzNNOUltTnNjeTAwSWlCa1BTSk5OQzQyTkN3MUxqWXhjeTB1TURJdExqQTFMUzR3TXkwdU1EY2lMejRLSUNBZ0lEeHdZWFJvSUdOc1lYTnpQU0pqYkhNdE5DSWdaRDBpVFRRdU5qRXNOUzQxTkdNdExqRTVMUzR6TnkwdU5qRXRMall0TGprMkxTNDNNeTB1TkMwdU1UUXRMamM1TFM0eUxURXVNakV0TGpFNUxTNDBNaXd3TFM0NE1TNHdOeTB4TGpJeExqSXlMUzR6TlM0eE5DMHVOell1TXprdExqa3lMamMzSWk4XHUwMDJCQ2lBZ1BDOW5QZ29nSUR4bklHbGtQU0pOWVd0bE1rUTZPbFpwYzJsaWJHVTZPbWx6YjJOeWRpSVx1MDAyQkNpQWdJQ0E4Y0dGMGFDQmpiR0Z6Y3owaVkyeHpMVGNpSUdROUlrMHhMak01TERJdU9UTmpMakE0TFM0eE9TNHlPUzB1TXpJdU5EWXRMak01TGpJdExqQTRMak01TFM0eE1TNDJMUzR4TVM0ek15d3dMQzQ1TGpFc01TNHdPUzQwTmlJdlBnb2dJQ0FnUEhCaGRHZ2dZMnhoYzNNOUltTnNjeTAzSWlCa1BTSk5NeTQxTml3eUxqa3pZeTR4TVM0eU9DMHVNVEV1TlMwdU16TXVOakl0TGpJekxqRXlMUzQxTGpFM0xTNDNOUzR4TjNNdExqVXpMUzR3TlMwdU56VXRMakUzWXkwdU1qSXRMakV5TFM0ME5TMHVNelF0TGpNekxTNDJNaUl2UGdvZ0lDQWdQR3hwYm1VZ1kyeGhjM005SW1Oc2N5MDNJaUI0TVQwaU1pNDBPQ0lnZVRFOUlpNHlOU0lnZURJOUlqUXVNRFVpSUhreVBTSTJMamd4SWk4XHUwMDJCQ2lBZ0lDQThiR2x1WlNCamJHRnpjejBpWTJ4ekxUY2lJSGd4UFNJeUxqUTRJaUI1TVQwaUxqSTFJaUI0TWowaUxqa2lJSGt5UFNJMkxqZ3hJaThcdTAwMkJDaUFnSUNBOGNHRjBhQ0JqYkdGemN6MGlZMnh6TFRjaUlHUTlJazA1TGprMUxESXVOakZqTGpRdExqSXpMamc0TFM0d09Dd3hMakl6TGpFeUlpOFx1MDAyQkNpQWdJQ0E4Y0dGMGFDQmpiR0Z6Y3owaVkyeHpMVGNpSUdROUlrMHhNaTQwTERZdU9EWmpMak00TFM0eU1pNDFMUzQyTnk0MU1TMHhMakEyTGpBeExTNDBNaTB1TURndExqZ3RMakl6TFRFdU1Ua3RMakk0TFM0M01TMHVPREl0TVM0ME9DMHhMalV0TVM0NE9DSXZQZ29nSUNBZ1BIQmhkR2dnWTJ4aGMzTTlJbU5zY3kwM0lpQmtQU0pOT1M0NU5TdzJMamcyWXkwdU16Z3RMakl5TFM0MUxTNDJOeTB1TlRFdE1TNHdOaTB1TURFdExqUXlMakE0TFM0NExqSXpMVEV1TVRrdU1qZ3RMamN4TGpneUxURXVORGdzTVM0MUxURXVPRGdpTHo0S0lDQWdJRHh3WVhSb0lHTnNZWE56UFNKamJITXROeUlnWkQwaVRURXlMalFzTWk0Mk1XTXRMalF0TGpJekxTNDRPQzB1TURndE1TNHlNeTR4TWlJdlBnb2dJQ0FnUEhCaGRHZ2dZMnhoYzNNOUltTnNjeTAzSWlCa1BTSk5PQzQzTWl3MExqYzBZekFzTGpVMUxqVXpMamt6TGprMUxERXVNVEl1TkRZdU1qRXNNU3d1TXl3eExqVXhMak56TVM0d05DMHVNRGtzTVM0MU1TMHVNMk11TkRJdExqRTVMamsxTFM0MU55NDVOUzB4TGpFeUlpOFx1MDAyQkNpQWdQQzluUGdvZ0lEeG5JR2xrUFNKTllXdGxNa1E2T2xacGMybGliR1U2T2xOalpXNWxVMmxzYUc5MVpYUjBaVU4xY25abGN5SVx1MDAyQkNpQWdJQ0E4YkdsdVpTQmpiR0Z6Y3owaVkyeHpMVFVpSUhneFBTSTBMak01SWlCNU1UMGlNVEV1T1RjaUlIZ3lQU0kyTGprMElpQjVNajBpTVRNdU5ETWlMejRLSUNBZ0lEeHNhVzVsSUdOc1lYTnpQU0pqYkhNdE5TSWdlREU5SWpZdU9UUWlJSGt4UFNJM0xqVTJJaUI0TWowaU5DNHpPU0lnZVRJOUlqa3VNRE1pTHo0S0lDQWdJRHh3WVhSb0lHTnNZWE56UFNKamJITXROU0lnWkQwaVRUUXVNRFVzTmk0NE1XTXVOREl0TGpJMExqZ3hMUzQyTnk0MU9TMHhMaklpTHo0S0lDQWdJRHhzYVc1bElHTnNZWE56UFNKamJITXROU0lnZURFOUlqa3VORGdpSUhreFBTSTVMakF6SWlCNE1qMGlOaTQ1TkNJZ2VUSTlJamN1TlRZaUx6NEtJQ0FnSUR4c2FXNWxJR05zWVhOelBTSmpiSE10TlNJZ2VERTlJalF1TXpraUlIa3hQU0l4TVM0NU55SWdlREk5SWpRdU16a2lJSGt5UFNJNUxqQXpJaThcdTAwMkJDaUFnSUNBOGNHRjBhQ0JqYkdGemN6MGlZMnh6TFRVaUlHUTlJazB1TXpFc05TNDJNVU14TGpBekxETXVPRElzTVM0M05Td3lMakEwTERJdU5EZ3VNalVpTHo0S0lDQWdJRHhzYVc1bElHTnNZWE56UFNKamJITXROU0lnZURFOUlqWXVPVFFpSUhreFBTSXhNeTQwTXlJZ2VESTlJamt1TkRnaUlIa3lQU0l4TVM0NU55SXZQZ29nSUNBZ1BIQmhkR2dnWTJ4aGMzTTlJbU5zY3kwMUlpQmtQU0pOTWk0ME9DNHlOV011TnpJc01TNDNPU3d4TGpRMExETXVOVGNzTWk0eE55dzFMak0ySWk4XHUwMDJCQ2lBZ0lDQThiR2x1WlNCamJHRnpjejBpWTJ4ekxUVWlJSGd4UFNJNUxqUTRJaUI1TVQwaU1URXVPVGNpSUhneVBTSTVMalE0SWlCNU1qMGlPUzR3TXlJdlBnb2dJQ0FnUEhCaGRHZ2dZMnhoYzNNOUltTnNjeTAxSWlCa1BTSk5Mak14TERVdU5qRmpMUzR4Tnk0ME1pNHdOUzQzT1M0ek5pd3hMakEwTGpNdU1qUXVOekV1TXprc01TNHdPQzQwTnk0M01pNHhOU3d4TGpZMExqQTRMREl1TXkwdU15SXZQZ29nSUNBZ1BIQmhkR2dnWTJ4aGMzTTlJbU5zY3kwMUlpQmtQU0pOTVRJdU5DdzJMamcyWXkwdU16Y3VNakl0TGpndU16TXRNUzR5TXk0ek0zTXRMamcxTFM0eE1TMHhMakl6TFM0ek0yTXRMakk1TFM0eE55MHVOVFF0TGpNNUxTNDNOQzB1TmpVdExqQTVMUzR4TVMwdU1UWXRMakkwTFM0eU15MHVNemN0TGpFM0xTNHpOQzB1TWpZdExqY3lMUzR5TmkweExqRXhjeTR3T1MwdU56WXVNall0TVM0eE1XTXVNRFl0TGpFekxqRTBMUzR5TlM0eU15MHVNemN1TWkwdU1qY3VORFV0TGpRNUxqYzBMUzQyTlM0ek55MHVNakl1T0MwdU16TXNNUzR5TXkwdU16TnpMamcxTGpFeExERXVNak11TXpOakxqSTVMakUzTGpVMExqTTVMamMwTGpZMUxqQTVMakV4TGpFMkxqSTBMakl6TGpNM0xqRTNMak0wTGpJMkxqY3lMakkyTERFdU1URnpMUzR3T1M0M05pMHVNallzTVM0eE1XTXRMakEyTGpFekxTNHhOQzR5TlMwdU1qTXVNemN0TGpJdU1qY3RMalExTGpRNUxTNDNOQzQyTlZvaUx6NEtJQ0E4TDJjXHUwMDJCQ2p3dmMzWm5QZz09Ig0KICAgICAgICB9DQogICAgICB9LA0KICAgICAgInRleHQiOiAiWVZjeGQySXpTakJKU0VwdllWYzFkbU15VG5saFdFSXdZek5zZFdSSFJqUkpSMFo2U1VoS2VrUlJjSEJpV0VKMlkyNVJaMk50Um5WYVJ6bDBSRkZ3Y0dKWVFuWmpibEZuVlcxb2NHSnRPR2RaV0UxblkyY3dTMFJSYjJwa00wcHdaRWhTYkdKcFFtbGxVMEpFWWtkR2VXRjVRa1JoUjFaMVduY3dTMGt5Vm5SWlYyeHpUMmxDYWxreWFHeGliV1JCV1RKNGFHTnRkR3BoUjFaMVduazFhMXBZVG5CYU1qUk9RMmN3UzBSUmNHdGFWMWxuWTIxR2RWcEhPWFJZTWs1MllrYzVlV014T1RCaU1UbDJXVzF3ZWt0RGF6WkVVVzluU1VOQloxa3lPWE5pTTBwbVlqSktjVkJZU25wTWEyUnNaRVU1YVdGdFZtcGtTRTF2U1d4T2JHSkhWbXBrUTBKSVdsYzVkRnBZVW5sbFUwSXdZbmxDUW1NelRuQmFNalJuVVRJNWMySXpTV2xNUTBKM1kyMVdlbHBYZUd4Wk0xRTVWa2hLTVZwVGEwNURhVUZuU1VOQ2NGcHBRblZpTTFGbldUSTVjMkl6U21aaU1rcHhUMmN3UzBsRFFXZEpRMEZuU1VOQ2QyTnRiSFZrUTJkcFZHMDVkVnBUUW5wYVYzaHNXVE5TYkZwRFNYQkVVVzluU1VOQlowbERRV2RKU0Vwc1pFaFdlV0puTUV0SlEwRm5TVWRXYzJNeVZUWkVVVzluU1VOQlowUlJiMmRKUTBGblNVTkJaMGxEVG5sWlZ6VnJZakl3WjFreU9YTmlNMGxPUTJsQlowbERRV2RKUTBGblJGRnZaMGxEUVdkSlEwRm5TVU5PYW1OdFZtaGtSMngxV25sQ2MyRllUakJKU0ZKMlNVZG9kbUpIVVdkYU1sWjJSRkZ2WjBsRFFXZEpRMEZuU1VoS2FHSnRVblppVmpscVlqSjRkbU5zT1haWmJXODVWekV3VGtOcFFXZEpRMEZuU1VOQlowUlJiMmRKUTBGblNVTkJaMGxIYkRCYVZ6RjZTVVF3WjB0RFNsTlpWelZyWWpJeFpsVnRWbXRKYVhkblNXdGFhR0pJVG14SmFYZG5TV3hTZVdSWFZXbExVM2R2U1d4S2FHSnRVblppVmpsSVkyMVdiR0pwU1hOSlEwcEhXVmQ0ZWxwVFNYTkpRMHBWWTI1V2JFbHBhM05MUTBwVFdWYzFhMkl5TVdaUmJYZ3hXbE5KYzBsRFNrZFpWM2g2V2xOSmMwbERTbFZqYmxac1NXbHJUa05wUVdkSlEwRm5TVU5CWjJOdFZucGtWM2d3WTNveGVXTjVOVWhhV0ZKRFlqSTVjMXBYUm5WTFEwcERZakk1YzFwWFJuVkpSemwzWkVkc2RtSnVUV2xKUTNod1pFZFdkR041ZDJkTFJsSjVaRmRWYzFaSVNqRmFVM2hWWTI1V2JFdFRhMDVEYVVGblNVTkJaMGxEUVdkRVVXOW5TVU5CWjBsRFFXZEpRVEJMU1VOQlowbERRV2RKUTBGcVkyMUdkVnBIT1hSSlNFcHNXa0V3UzBsRFFXZEpRMEZuU1VOQ2NGcHBRbmxhV0U0eFlraFNlbEJVTVdKV1NFb3hXbE40UjFsWGVIcGFVM2hIV1ZkNGVscFdNRFpFVVc5blNVTkJaMGxEUVdkSlEwRm5TVU5CVGtOcFFXZEpRMEZuU1VOQlowbERRV2RKUVRCTFNVTkJaMGxEUVdkSlEwRm5TVU5CWjBrelVtOWFVMEowV2xkR01FUlJiMmRKUTBGblNVTkJaMGxEUVdkSlEwSnRZak5KWjJJeVNuRkpSMngxU1VkT2RtSkhPWGxZTWpscFlXcHZUa05wUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQmFsb3lWblZhV0Vwb1pFZFZaMk50Um5WYVJ6bDBTVWRPZG1KSE9YbEVVVzluU1VOQlowbERRV2RKUTBGblNVTkJaMGxEUVdkRVVXOW5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRV2RhTWtrNVkyMUdkVnBIT1hSTWJrcG9ZbTFTY0dKdVVXOU9VM2Q1VGxSVmNFUlJiMmRKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBSUmIyZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMWt5T1hOaU0wcG1ZMjFHZFZveVZUbExSRWt4VGxOcmMwdEhaR2xMVTNkdldqSkpjRVJSYjJkSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowa3lSbmRqUjNnMVNVaFNka2xEUVdkSlIxWm9XVEpuWjJGWE5XdGhXRnB3V2toV2FHSkRRblpaYlhCc1dUTlNla1JSYjJkSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQloyTnVUWFZVTWtweFdsZE9NRkV5T1hOaU0wbHZZakpLY1V4SFRuWmlSemw1V0ROS2FHSnRaR3hMVVRCTFNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpRVEJMU1VOQlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlNFcG9ZbTFTZG1KV09XcGlNbmgyWTJ3NWRsbHRiM1ZaV0VKM1dsYzFhMHRIT1dsaGFXdE9RMmxCWjBsRFFXZEpRMEZuU1ROS2FHSnRVblppVTBKdVkyMVdiR0puTUV0SlEwRm5TVU5CWjBsRFFteGlSMnh0U1VoS2JHTXpWbk5rU0UwNVVGWjBSMWxYZUhwYVUzaFZZMjVXYkV4RldtaGlTRTVzV0ZSdlRrTnBRV2RKUTBGblNVTkJaMGxEUVdkSlFUQkxTVU5CWjBsRFFXZEpRMEZuU1VOQlowa3pVbTlhVTBKMFdsZEdNRVJSYjJkSlEwRm5TVU5CWjBsRFFXZEpRMEp0WWpOSloySXlTbkZKUjJ4MVNVZE9kbUpIT1hsWU1qbHBZV3B2VGtOcFFXZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJhbG95Vm5WYVdFcG9aRWRWWjJOdFJuVmFSemwwU1VkT2RtSkhPWGxFVVc5blNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEVVVzluU1VOQlowbERRV2RKUTBGblNVTkJaMGxEUVdkamJVazVZMjFHZFZwSE9YUk1ia3BvWW0xU2NHSnVVVzlPVTNkNVRsUlZjRVJSYjJkSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowUlJiMmRKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjFreU9YTmlNMHBtWTIxR2RWb3lWVGxMU0VwcFMxTjNiMDFxVlRGTFUzZHZZMjFKY0VSUmIyZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMGt5Um5kalIzZzFTVWhTZGtsSFZtaFpNbWRuWVZjMWEyRllXbkJhU0Zab1lrTkNkbGx0Y0d4Wk0xSjZSRkZ2WjBsRFFXZEpRMEZuU1VOQlowbERRV2RKUTBGblkyNU5kVlF5U25GYVYwNHdVVEk1YzJJelNXOWlNa3B4VEVkT2RtSkhPWGxZTTBwb1ltMWtiRXRSTUV0SlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbEJNRXRKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsSVNtaGliVkoyWWxZNWFtSXllSFpqYkRsMldXMXZkVmxZUW5kYVZ6VnJTMGM1YVdGcGEwNURhVUZuU1VOQlowbERRV2RKUTBGblNVTkJaMGxEUVU1RGFVRm5TVU5CWjBsRFFXZEpNMHBvWW0xU2RtSlRRbWxpU0Zac1JGRnZaMGxEUVdkSlEwRm5TVWRXYzJGWFdXZGpiVlo2WkZkNE1HTjZNRGxYTUZwb1lraE9iRXhGV21oaVNFNXNURVpTZVdSWFZtUlBaekJMU1VOQlowbERRV2RKUTBGblNVTkJaMFJSYjJkSlEwRm5TVU5CWjBsRFFXZEpRMEZxWkVkb2JFbEhNV3haV0ZGT1EybEJaMGxEUVdkSlEwRm5TVU5CWjBsSFduWmphVUoyV1cxdloyRlhOR2RaTWpsellqTktabUl5U25GUFp6QkxTVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRV2RKUTA1dVdsYzFiR050UmpCYVUwSjVXVmMxYTJJeU1HZFpNamx6WWpOSlRrTnBRV2RKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CVGtOcFFXZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkNlVnA2TVhsWlZ6VnJZakl3ZFdOdFJuVmFSMngxWkVObk1VeEVTVEZPVTJ0T1EybEJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEZPUTJsQlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlEwSnFZako0ZG1Oc09YbFpWelZ1V2xRd2IyTnRZM0JNUTJoNVdubHJjMHRFU1RGT1UydE9RMmxCWjBsRFFXZEpRMEZuU1VOQlowbERRV2RKUTBGcVdWaENkMkpJYTJka1J6aG5XbGRHYW1GRFFuQmliVkp3Wkcxc2EyUlhSbk5KUnpscFlXMVdhbVJJVFU1RGFVRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRbmxqZVRWUVdXMXdiRmt6VWtSaU1uaDJZMmxvZGxsdGIzTlpNamx6WWpOS1ptTnRSblZhTWxWd1JGRnZaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEZuUkZGdlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlEwRm5ZMjFHZFZwSE9YUllNazUyWWtjNWVWZ3lPV2xoYVRWb1kwaENiR0p0VVc5aU1rcHhTMUV3UzBsRFFXZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsQk1FdEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpRVEJMU1VOQlowbERRV2RKUTBKc1lrZHNiVWxJU214ak0xWnpaRWhOT1ZCV2RFZFpWM2g2V2xONFZXTnVWbXhNUTBKSFdWZDRlbHBXTURaRVVXOW5TVU5CWjBsRFFXZEpRMEZuU1VOQ2JXSXpTV2RpTWtweFNVZHNkVWxIVG5aaVJ6bDVXREk1YVdGcWIwNURhVUZuU1VOQlowbERRV2RKUTBGblNVTkJaMGxEUW5sWmFqRjVXVmMxYTJJeU1IVmpiVVoxV2tkc2RXUkRaekZNUkVreFRsTnJUa05wUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlRrTnBRV2RKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5DYW1JeWVIWmpiRGw1V1ZjMWJscFVNWGxaYVhkNVRsUlZjMk50U1U1RGFVRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRV3BaV0VKM1lraHJaMlJIT0dkYVYwWnFZVU5DY0dKdFVuQmtiV3hyWkZkR2MwbEhPV2xoYlZacVpFaE5Ua05wUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQ2VXTjVOVkJaYlhCc1dUTlNSR0l5ZUhaamFXaDJXVzF2YzFreU9YTmlNMHBtWTIxR2RWb3lWWEJFVVc5blNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEVVVzluU1VOQlowbERRV2RKUTBGblNVTkJaMGxEUVdkamJVWjFXa2M1ZEZneVRuWmlSemw1V0RJNWFXRnBOV2hqU0VKc1ltMVJiMkl5U25GTFVUQkxTVU5CWjBsRFFXZEpRMEpzWWtoT2JFOW5NRXRKUTBGblNVTkJaMGxEUVdkSlEwRm5TVE5TYjFwVFFuUmFWMFl3UkZGdlowbERRV2RKUTBGblNVTkJaMGxEUW0xaU0wbG5ZakpLY1VsSGJIVkpSMDUyWWtjNWVWZ3lPV2xoYW05T1EybEJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEZxV2pKV2RWcFlTbWhrUjFWblkyMUdkVnBIT1hSSlIwNTJZa2M1ZVVSUmIyZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMFJSYjJkSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQloyTnRZemxqYlVaMVdrYzVkRXh1U21oaWJWSndZbTVSYjAxRGQzbE9WRlZ3UkZGdlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlEwRm5SRkZ2WjBsRFFXZEpRMEZuU1VOQlowbERRV2RKUTBGbldUSTVjMkl6U21aamJVWjFXakpWT1V0SVNtaGliVkoyWWxNMWVWbFhOV3RoVnpVd1MwUkJjMDFxVlRGTFUydHpTMGhLYUdKdFVuWmlVelY1V1ZjMWEyRlhOVEJMUkVGelRXcFZNVXRUYTNOTFNFcG9ZbTFTZG1KVE5YbFpWelZyWVZjMU1FdEVRWE5OYWxVeFMxTnJUa05wUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQmFsbFlRbmRpU0d0blpFYzRaMXBYUm1waFEwSndZbTFTY0dSdGJHdGtWMFp6U1VjNWFXRnRWbXBrU0UxT1EybEJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEo1WTNrMVVGbHRjR3haTTFKRVlqSjRkbU5wYUhaWmJXOXpXVEk1YzJJelNtWmpiVVoxV2pKVmNFUlJiMmRKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBSUmIyZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMk50Um5WYVJ6bDBXREpPZG1KSE9YbFlNamxwWVdrMWFHTklRbXhpYlZGdllqSktjVXRSTUV0SlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbEJNRXRKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsQk1FdEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMGxCTUV0SlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbEJNRXRKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRV2RKUTA1MVpGY3hhVnBZU1dkaU1sbG5ZakpLY1ZwWFRqQmpkekJMU1VOQlowbERRV2RKUTBGblNVTkJaMk5JU25CaWJsRnZZa2RXZFV0SVNtaGliVkoyWWxZNWFtSXllSFpqYkRsMldXMXZjRXhEU1dkaU1rcHhXbGRPTUdONVFqTmFXRXBzU1VoS2FHSnRVblppVjJ3MldsZFJaMlF5YkRCaFEwSnFZako0ZG1OdVRXbExVVEJMUkZGdlRrTm5NRXRKTTBveFltbENNR0ZIVldkYWJsWjFXVE5TY0dJeU5FNURia3BvWW0xU2RtSldPV3BpTW5oMlkyNU9abVJIT1daaU1rcHhZM2xuY0VSUmJ6MD0iDQogICAgfSwNCiAgICB7DQogICAgICAiaWQiOiAiNjRiOTc3MzctMmNlNy00YTBiLThlZjMtZDVjZWM1YTBmZThhIiwNCiAgICAgICJsYW5ndWFnZSI6IHsNCiAgICAgICAgImlkIjogIiouKi5weXRob24iLA0KICAgICAgICAidmVyc2lvbiI6ICIqLiouKiINCiAgICAgIH0sDQogICAgICAidGl0bGUiOiAiVVAyIiwNCiAgICAgICJ0ZXh0IjogIllWY3hkMkl6U2pCSlNFcHZZVmMxZG1NeVRubGhXRUl3WXpOc2RXUkhSalJKUjBaNlNVaEtla1JSYjA1RGFVNHpZMjFzTUdSSFZuVkpSMG8xU1VWT2MxbFlTbkpKUlU1dldsYzFia1JSYjJwYVZ6Rm9ZVmQzTmtsSFRtcGhSMVoxV2pCQ2FtSkhSbmxoTWs1dldsYzFia3h0VW14ak1teHVZbWN3UzBSUmIwNURiVkpzV21sQ1ZsVkVTVzlMVkc5T1EybEJaMGxEUW5aWmJXODVZMjVOZFZJeVZqQlVNa3B4V2xkT01HTjVaMmxWTWxaeldsZE9NRWxIT1dsaGJWWnFaRU5DTUdKNVFucFpNa1p6V2xOSmMwbElRbmxhV0U1c1lrZFdhbVJFTVZWamJsWnNTMUV3UzBsRFFXZEpSMnh0U1VjMWRtUkRRblpaYlc4MlJGRnZaMGxEUVdkSlEwRm5TVWhDZVdGWE5UQkxRMHBQWWpJMWJFbElUbXhpUjFacVpFZFdhMGxwYTA1RGFVRm5TVU5CWjBsRFFXZGpiVll3WkZoS2RVUlJiMmRKUTBGbllWZFpaMkl5U25GUFp6QkxTVU5CWjBsRFFXZEpRMEoyWTIxc2JtRlhORGxqYmsxMVVqSldNRlZIT1hCaWJsRnZTV3M1ZVdGWFpIQmlhVWx3UkZGdlowbERRV2RoVjFsbllqTktjRm95YkhWUFp6QkxTVU5CWjBsRFFXZEpRMEZPUTJsQlowbERRV2RKUTBGblNUSk9lVnBYUmpCYVUwSXdZakprYm1KSFZXZGFiVGw1U1VoT2FsbFhlR3hFVVc5blNVTkJaMGxEUVdkSlIwNTJZMGhyT1dOdVRYVlNNbFl3VVcwNWRtSkhWbWhpYVdkcFVUSTVkMlZUU1hOTFEwcEVZak5DTlVscGQyZEphelYyU1dsM1owbHNiR3hqZVVsd1RFVmFhR0pJVG14TFVUQkxTVU5CWjBsRFFXZEpRMEozWTIxc2RXUkRhR3BpTTBJMVMxRXdTMGxEUVdkSlEwRm5TVU5CVGtOcFFXZEpRMEZuU1VOQlowa3lWalJrU0Vwb1dUTlJaMlJ0Um5Oa1YxVm5XbTVLZG1KVFFuTmhXRTR3UkZGdlowbERRV2RKUTBGblNVZE9kbU5JYXpsWk1qbDNaVlp6ZDFoUk1FdEpRMEZuU1VOQlowbERRVTVEYVVGblNVTkJaMGxEUVdkSk0wNXFXVmQ0YkVsSE9XbGhiVlpxWkVFd1MwbERRV2RKUTBGblNVTkNlV041TlZSWk1rWnpXbFU1YVdGdFZtcGtRMmgyV1cxdmMySXpTbkJhTW14MVRFTkJiMDFUTkhkTmFYZDRUR3BCZVV4RVJYVk5SRWx3VEVkT2RtTklhM0JFVVc5blNVTkJaMGxEUVdkSlEwNTJZMjFzYm1GWE5EbGpiazExVVZkU2ExVkhPWEJpYmxGdlRVTjNkMHhFUVhCRVVXOU9RMnhXVVUxcFozQT0iDQogICAgfQ0KICBdDQp9";

    static bool s_initialized = false;
    static dynamic s_projectServer = default;
    static object s_project = default;

    public static void Initialize()
    {
      if (s_initialized)
        return;

      s_projectServer = ProjectInterop.GetProjectServer();
      if (s_projectServer is null)
      {
        RhinoApp.WriteLine($"Error loading plugin. Missing Rhino3D platform");
        return;
      }

      // get project
      dynamic dctx = ProjectInterop.CreateInvokeContext();
      dctx.Inputs["projectAssembly"] = typeof(ProjectPlugin).Assembly;
      dctx.Inputs["projectId"] = s_projectId;
      dctx.Inputs["projectData"] = s_projectData;

      object project = default;
      if (s_projectServer.TryInvoke("plugins/v1/deserialize", dctx)
            && dctx.Outputs.TryGet("project", out project))
      {
        // server reports errors
        s_project = project;
      }

      s_initialized = true;
    }

    public static ProjectPlugin Instance { get; private set; }

    public static Rhino.Commands.Result RunCode(Command command, Guid id, RhinoDoc doc, RunMode mode)
    {
      if (s_project is null)
      {
        RhinoApp.WriteLine($"Error running command {id}. Project deserializiation failed.");
        return Rhino.Commands.Result.Failure;
      }

      dynamic rctx = ProjectInterop.CreateInvokeContext();
      rctx.Inputs["command"] = command;
      rctx.Inputs["project"] = s_project;
      rctx.Inputs["projectId"] = id;
      rctx.Inputs["doc"] = doc;
      rctx.Inputs["runMode"] = mode;

      if (s_projectServer.TryInvoke("plugins/v1/run", rctx))
        return Rhino.Commands.Result.Success;

      // server reports error
      else
        return Rhino.Commands.Result.Failure;
    }

    public ProjectPlugin() { Instance = this; }
  }
}
